##############################################################################
# Cloud Build Configuration - Studio Italo Santos
# 
# Este arquivo define os passos para build e deploy no Google Cloud Platform
# Projeto: YOUR_FIREBASE_PROJECT_ID
##############################################################################

steps:
  # ========================================
  # Step 1: Install dependencies
  # ========================================
  - name: 'node:20'
    id: 'install-dependencies'
    entrypoint: npm
    args: ['ci', '--legacy-peer-deps']
    
  # ========================================
  # Step 2: Load environment variables from Secret Manager
  # ========================================
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'load-secrets'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Carregando secrets do Secret Manager..."
        # Criar .env.local a partir dos secrets
        gcloud secrets versions access latest --secret="FIREBASE_API_KEY" > .env.local
        echo "NEXT_PUBLIC_FIREBASE_API_KEY=$(gcloud secrets versions access latest --secret='FIREBASE_API_KEY')" >> .env.local
        echo "FIREBASE_PROJECT_ID=$(gcloud secrets versions access latest --secret='FIREBASE_PROJECT_ID')" >> .env.local
        # Adicione mais secrets conforme necess√°rio
        echo "‚úÖ Secrets carregados"
    
  # ========================================
  # Step 3: Generate Prisma Client (se usar Prisma)
  # ========================================
  - name: 'node:20'
    id: 'generate-prisma'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -f "prisma/schema.prisma" ]; then
          echo "üì¶ Gerando Prisma Client..."
          npx prisma generate
        else
          echo "‚ÑπÔ∏è  Prisma n√£o configurado, pulando..."
        fi
    
  # ========================================
  # Step 4: Run Prisma Migrations (opcional)
  # ========================================
  - name: 'node:20'
    id: 'run-migrations'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -f "prisma/schema.prisma" ] && [ ! -z "$_DATABASE_URL" ]; then
          echo "üóÑÔ∏è  Executando migrations..."
          npx prisma migrate deploy
        else
          echo "‚ÑπÔ∏è  Migrations desabilitadas, pulando..."
        fi
    env:
      - 'DATABASE_URL=${_DATABASE_URL}'
    
  # ========================================
  # Step 5: Build Next.js Application
  # ========================================
  - name: 'node:20'
    id: 'build-nextjs'
    entrypoint: npm
    args: ['run', 'build']
    env:
      - 'NODE_ENV=production'
      - 'NEXT_TELEMETRY_DISABLED=1'
    
  # ========================================
  # Step 6: Deploy to App Engine
  # ========================================
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-app-engine'
    args: 
      - 'app'
      - 'deploy'
      - 'app.yaml'
      - '--quiet'
      - '--project=${_PROJECT_ID}'
      - '--version=${SHORT_SHA}'
      - '--promote'

# ========================================
# Configuration Options
# ========================================
timeout: '1800s'  # 30 minutos

substitutions:
  _PROJECT_ID: 'YOUR_FIREBASE_PROJECT_ID'
  _REGION: 'southamerica-east1'
  _DATABASE_URL: ''  # Deixe vazio se n√£o usar Prisma

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  
# ========================================
# Artifacts (opcional)
# ========================================
artifacts:
  objects:
    location: 'gs://${_PROJECT_ID}_cloudbuild/builds/${BUILD_ID}'
    paths: ['.next/**']