/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/import-in-the-middle";
exports.ids = ["vendor-chunks/import-in-the-middle"];
exports.modules = {

/***/ "(action-browser)/./node_modules/import-in-the-middle/index.js":
/*!****************************************************!*\
  !*** ./node_modules/import-in-the-middle/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst path = __webpack_require__(/*! path */ \"path\")\nconst parse = __webpack_require__(/*! module-details-from-path */ \"(action-browser)/./node_modules/module-details-from-path/index.js\")\nconst { fileURLToPath } = __webpack_require__(/*! url */ \"url\")\nconst { MessageChannel } = __webpack_require__(/*! worker_threads */ \"worker_threads\")\n\nconst {\n  importHooks,\n  specifiers,\n  toHook,\n  getExperimentalPatchInternals\n} = __webpack_require__(/*! ./lib/register */ \"(action-browser)/./node_modules/import-in-the-middle/lib/register.js\")\n\nfunction addHook (hook) {\n  importHooks.push(hook)\n  toHook.forEach(([name, namespace]) => hook(name, namespace))\n}\n\nfunction removeHook (hook) {\n  const index = importHooks.indexOf(hook)\n  if (index > -1) {\n    importHooks.splice(index, 1)\n  }\n}\n\nfunction callHookFn (hookFn, namespace, name, baseDir) {\n  const newDefault = hookFn(namespace, name, baseDir)\n  if (newDefault && newDefault !== namespace) {\n    namespace.default = newDefault\n  }\n}\n\nlet sendModulesToLoader\n\n/**\n * EXPERIMENTAL\n * This feature is experimental and may change in minor versions.\n * **NOTE** This feature is incompatible with the {internals: true} Hook option.\n *\n * Creates a message channel with a port that can be used to add hooks to the\n * list of exclusively included modules.\n *\n * This can be used to only wrap modules that are Hook'ed, however modules need\n * to be hooked before they are imported.\n *\n * ```ts\n * import { register } from 'module'\n * import { Hook, createAddHookMessageChannel } from 'import-in-the-middle'\n *\n * const { registerOptions, waitForAllMessagesAcknowledged } = createAddHookMessageChannel()\n *\n * register('import-in-the-middle/hook.mjs', import.meta.url, registerOptions)\n *\n * Hook(['fs'], (exported, name, baseDir) => {\n *   // Instrument the fs module\n * })\n *\n * // Ensure that the loader has acknowledged all the modules\n * // before we allow execution to continue\n * await waitForAllMessagesAcknowledged()\n * ```\n */\nfunction createAddHookMessageChannel () {\n  const { port1, port2 } = new MessageChannel()\n  let pendingAckCount = 0\n  let resolveFn\n\n  sendModulesToLoader = (modules) => {\n    pendingAckCount++\n    port1.postMessage(modules)\n  }\n\n  port1.on('message', () => {\n    pendingAckCount--\n\n    if (resolveFn && pendingAckCount <= 0) {\n      resolveFn()\n    }\n  }).unref()\n\n  function waitForAllMessagesAcknowledged () {\n    // This timer is to prevent the process from exiting with code 13:\n    // 13: Unsettled Top-Level Await.\n    const timer = setInterval(() => { }, 1000)\n    const promise = new Promise((resolve) => {\n      resolveFn = resolve\n    }).then(() => { clearInterval(timer) })\n\n    if (pendingAckCount === 0) {\n      resolveFn()\n    }\n\n    return promise\n  }\n\n  const addHookMessagePort = port2\n  const registerOptions = { data: { addHookMessagePort, include: [] }, transferList: [addHookMessagePort] }\n\n  return { registerOptions, addHookMessagePort, waitForAllMessagesAcknowledged }\n}\n\nfunction Hook (modules, options, hookFn) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, hookFn)\n  if (typeof modules === 'function') {\n    hookFn = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    hookFn = options\n    options = null\n  }\n  const internals = options ? options.internals === true : false\n\n  if (sendModulesToLoader && Array.isArray(modules)) {\n    sendModulesToLoader(modules)\n  }\n\n  this._iitmHook = (name, namespace) => {\n    const filename = name\n    const isBuiltin = name.startsWith('node:')\n    let baseDir\n\n    if (isBuiltin) {\n      name = name.replace(/^node:/, '')\n    } else {\n      if (name.startsWith('file://')) {\n        try {\n          name = fileURLToPath(name)\n        } catch (e) {}\n      }\n      const details = parse(name)\n      if (details) {\n        name = details.name\n        baseDir = details.basedir\n      }\n    }\n\n    if (modules) {\n      for (const moduleName of modules) {\n        if (moduleName === name) {\n          if (baseDir) {\n            if (internals) {\n              name = name + path.sep + path.relative(baseDir, fileURLToPath(filename))\n            } else {\n              if (!getExperimentalPatchInternals() && !baseDir.endsWith(specifiers.get(filename))) continue\n            }\n          }\n          callHookFn(hookFn, namespace, name, baseDir)\n        }\n      }\n    } else {\n      callHookFn(hookFn, namespace, name, baseDir)\n    }\n  }\n\n  addHook(this._iitmHook)\n}\n\nHook.prototype.unhook = function () {\n  removeHook(this._iitmHook)\n}\n\nmodule.exports = Hook\nmodule.exports.Hook = Hook\nmodule.exports.addHook = addHook\nmodule.exports.removeHook = removeHook\nmodule.exports.createAddHookMessageChannel = createAddHookMessageChannel\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/import-in-the-middle/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/import-in-the-middle/lib/register.js":
/*!***********************************************************!*\
  !*** ./node_modules/import-in-the-middle/lib/register.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst importHooks = [] // TODO should this be a Set?\nconst setters = new WeakMap()\nconst getters = new WeakMap()\nconst specifiers = new Map()\nconst toHook = []\n\nconst proxyHandler = {\n  set (target, name, value) {\n    return setters.get(target)[name](value)\n  },\n\n  get (target, name) {\n    if (name === Symbol.toStringTag) {\n      return 'Module'\n    }\n\n    const getter = getters.get(target)[name]\n\n    if (typeof getter === 'function') {\n      return getter()\n    }\n  },\n\n  defineProperty (target, property, descriptor) {\n    if ((!('value' in descriptor))) {\n      throw new Error('Getters/setters are not supported for exports property descriptors.')\n    }\n\n    return setters.get(target)[property](descriptor.value)\n  }\n}\n\nfunction register (name, namespace, set, get, specifier) {\n  specifiers.set(name, specifier)\n  setters.set(namespace, set)\n  getters.set(namespace, get)\n  const proxy = new Proxy(namespace, proxyHandler)\n  importHooks.forEach(hook => hook(name, proxy))\n  toHook.push([name, proxy])\n}\n\nlet experimentalPatchInternals = false\n\nfunction getExperimentalPatchInternals () {\n  return experimentalPatchInternals\n}\n\nfunction setExperimentalPatchInternals (value) {\n  experimentalPatchInternals = value\n}\n\nexports.register = register\nexports.importHooks = importHooks\nexports.specifiers = specifiers\nexports.toHook = toHook\nexports.getExperimentalPatchInternals = getExperimentalPatchInternals\nexports.setExperimentalPatchInternals = setExperimentalPatchInternals\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pbXBvcnQtaW4tdGhlLW1pZGRsZS9saWIvcmVnaXN0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsY0FBYztBQUNkLHFDQUFxQztBQUNyQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pdGFsby1zYW50b3MvLi9ub2RlX21vZHVsZXMvaW1wb3J0LWluLXRoZS1taWRkbGUvbGliL3JlZ2lzdGVyLmpzPzZhY2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVW5sZXNzIGV4cGxpY2l0bHkgc3RhdGVkIG90aGVyd2lzZSBhbGwgZmlsZXMgaW4gdGhpcyByZXBvc2l0b3J5IGFyZSBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBMaWNlbnNlLlxuLy9cbi8vIFRoaXMgcHJvZHVjdCBpbmNsdWRlcyBzb2Z0d2FyZSBkZXZlbG9wZWQgYXQgRGF0YWRvZyAoaHR0cHM6Ly93d3cuZGF0YWRvZ2hxLmNvbS8pLiBDb3B5cmlnaHQgMjAyMSBEYXRhZG9nLCBJbmMuXG5cbmNvbnN0IGltcG9ydEhvb2tzID0gW10gLy8gVE9ETyBzaG91bGQgdGhpcyBiZSBhIFNldD9cbmNvbnN0IHNldHRlcnMgPSBuZXcgV2Vha01hcCgpXG5jb25zdCBnZXR0ZXJzID0gbmV3IFdlYWtNYXAoKVxuY29uc3Qgc3BlY2lmaWVycyA9IG5ldyBNYXAoKVxuY29uc3QgdG9Ib29rID0gW11cblxuY29uc3QgcHJveHlIYW5kbGVyID0ge1xuICBzZXQgKHRhcmdldCwgbmFtZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc2V0dGVycy5nZXQodGFyZ2V0KVtuYW1lXSh2YWx1ZSlcbiAgfSxcblxuICBnZXQgKHRhcmdldCwgbmFtZSkge1xuICAgIGlmIChuYW1lID09PSBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiAgICAgIHJldHVybiAnTW9kdWxlJ1xuICAgIH1cblxuICAgIGNvbnN0IGdldHRlciA9IGdldHRlcnMuZ2V0KHRhcmdldClbbmFtZV1cblxuICAgIGlmICh0eXBlb2YgZ2V0dGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gZ2V0dGVyKClcbiAgICB9XG4gIH0sXG5cbiAgZGVmaW5lUHJvcGVydHkgKHRhcmdldCwgcHJvcGVydHksIGRlc2NyaXB0b3IpIHtcbiAgICBpZiAoKCEoJ3ZhbHVlJyBpbiBkZXNjcmlwdG9yKSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignR2V0dGVycy9zZXR0ZXJzIGFyZSBub3Qgc3VwcG9ydGVkIGZvciBleHBvcnRzIHByb3BlcnR5IGRlc2NyaXB0b3JzLicpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNldHRlcnMuZ2V0KHRhcmdldClbcHJvcGVydHldKGRlc2NyaXB0b3IudmFsdWUpXG4gIH1cbn1cblxuZnVuY3Rpb24gcmVnaXN0ZXIgKG5hbWUsIG5hbWVzcGFjZSwgc2V0LCBnZXQsIHNwZWNpZmllcikge1xuICBzcGVjaWZpZXJzLnNldChuYW1lLCBzcGVjaWZpZXIpXG4gIHNldHRlcnMuc2V0KG5hbWVzcGFjZSwgc2V0KVxuICBnZXR0ZXJzLnNldChuYW1lc3BhY2UsIGdldClcbiAgY29uc3QgcHJveHkgPSBuZXcgUHJveHkobmFtZXNwYWNlLCBwcm94eUhhbmRsZXIpXG4gIGltcG9ydEhvb2tzLmZvckVhY2goaG9vayA9PiBob29rKG5hbWUsIHByb3h5KSlcbiAgdG9Ib29rLnB1c2goW25hbWUsIHByb3h5XSlcbn1cblxubGV0IGV4cGVyaW1lbnRhbFBhdGNoSW50ZXJuYWxzID0gZmFsc2VcblxuZnVuY3Rpb24gZ2V0RXhwZXJpbWVudGFsUGF0Y2hJbnRlcm5hbHMgKCkge1xuICByZXR1cm4gZXhwZXJpbWVudGFsUGF0Y2hJbnRlcm5hbHNcbn1cblxuZnVuY3Rpb24gc2V0RXhwZXJpbWVudGFsUGF0Y2hJbnRlcm5hbHMgKHZhbHVlKSB7XG4gIGV4cGVyaW1lbnRhbFBhdGNoSW50ZXJuYWxzID0gdmFsdWVcbn1cblxuZXhwb3J0cy5yZWdpc3RlciA9IHJlZ2lzdGVyXG5leHBvcnRzLmltcG9ydEhvb2tzID0gaW1wb3J0SG9va3NcbmV4cG9ydHMuc3BlY2lmaWVycyA9IHNwZWNpZmllcnNcbmV4cG9ydHMudG9Ib29rID0gdG9Ib29rXG5leHBvcnRzLmdldEV4cGVyaW1lbnRhbFBhdGNoSW50ZXJuYWxzID0gZ2V0RXhwZXJpbWVudGFsUGF0Y2hJbnRlcm5hbHNcbmV4cG9ydHMuc2V0RXhwZXJpbWVudGFsUGF0Y2hJbnRlcm5hbHMgPSBzZXRFeHBlcmltZW50YWxQYXRjaEludGVybmFsc1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/import-in-the-middle/lib/register.js\n");

/***/ })

};
;